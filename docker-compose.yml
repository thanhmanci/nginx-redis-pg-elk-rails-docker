version: '3'
services:
  db:
    image: postgres
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      DB_HOST: 127.0.0.1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      ALLOW_IP_RANGE: 0.0.0.0/0
    ports:
      - 5000:5432
  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    depends_on:
      - redis
      - db
      - logstash
    volumes:
      - .:/myapp
    logging:
      driver: gelf
      options:
        gelf-address: 'udp://localhost:12201'
    environment:
      RAILS_ENV: production
  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    depends_on:
      - app
    ports:
      - 80:80
  redis:
    image: redis


  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "12201:12201/udp"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

networks:

  elk:
    driver: bridge

volumes:
  postgres-db:
  redis:
